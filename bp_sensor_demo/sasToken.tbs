include "global.tbh"

'====================================================================
syscall(878) hmac256(byref key as string,byref payload as string, byref result as string)

'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
dim base64_chars as byte(64) = {
		&h41, &h42, &h43, &h44, &h45, &h46, &h47, &h48, &h49, &h4A, &h4B, &h4C, &h4D, &h4E, &h4F,
  &h50, &h51, &h52, &h53, &h54, &h55, &h56, &h57, &h58, &h59, &h5A,
		&h61, &h62, &h63, &h64, &h65, &h66, &h67, &h68, &h69, &h6A, &h6B, &h6C, &h6D, &h6E, &h6F,
  &h70, &h71, &h72, &h73, &h74, &h75, &h76, &h77, &h78, &h79, &h7A,
		&h30, &h31, &h32, &h33, &h34, &h35, &h36, &h37, &h38, &h39, &h2B, &h2F,
}

dim base64_inv as byte(80) = { 
	62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5,
	6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
	43, 44, 45, 46, 47, 48, 49, 50, 51 
}


sub base64_encode(byref input_str as string, input_len as byte, byref result as string)
	dim out_len as byte
	dim in as byte(255) = input_str
	dim out as byte(255)
	dim i as byte = 0
	dim j as byte = 0
	dim v as dword = 0
	dim index as byte
	if input_len > 254 then
		exit sub
	end if
	out_len = input_len
	if input_len MOD 3 <> 0 then
		out_len = out_len + 3 - (input_len MOD 3)
	end if
	out_len = out_len / 3
	out_len = out_len * 4	
	
	
	for i=0 to input_len step 3
		v = in(i)
		if i + 1 < input_len then
			v = (v SHL 8) OR in(i + 1)
		else
			v = v SHL 8
		end if
		
		if i + 2 < input_len then
			v = (v SHL 8) OR in(i + 2)
		else
			v = v SHL 8
		end if
		
		out(j) = base64_chars((v SHR 18) AND &h3F)
		out(j + 1) = base64_chars((v SHR 12) AND &h3F)
		if i + 1 < input_len then
			out(j + 2) = base64_chars((v SHR 6) AND &h3F)
		else
			out(j + 2) = &h3D '=
		end if
		
		if i + 2 < input_len then
			out(j + 3) = base64_chars(v AND &h3F)
		else
			out(j + 3) = &h3D '=
		end if

		j = j + 4
	next i

	result = out
	result = mid(result,0,out_len)
	
end sub

sub base64_decode(byref input as string, byref result as string)
	
	dim str_len as byte = 0
	dim i as byte
	dim j as byte
	dim v as dword
	dim out as byte(255)
	dim in as byte(255) = strgen(255,"\x00")
	
	in=input
	
	for i = 0 to 255 - 1
		if in(i) <> 0 then
			str_len = str_len + 1
		end if
		out(i) = 0
	next i
	
	dim out_len as byte = str_len / 4 * 3
	for i=str_len-1 to 0 step -1
		if in(i) = &h3D then
			out_len = out_len - 1
		else
			exit for
		end if
	next i
	
	j = 0
	for i=0 to str_len-1 step 4
	
		v = base64_inv(in(i)-43)
		v = (v SHL 6) OR base64_inv(in(i+1)-43)
		
		if in(i+2)=&h3D then
			v = v SHL 6
		else
			v = (v SHL 6) OR base64_inv(in(i + 2) - 43)
		end if
		if in(i+3)=&h3D then
			v = v SHL 6
		else
			v = (v SHL 6) OR base64_inv(in(i + 3) - 43)
		end if
		
		out(j) = (v SHR 16) AND &hFF
		
		if in(i+2) <> &h3D then
			out(j+1) = (v SHR 8) AND &hFF
		end if
		
		if in(i+3) <> &h3D then
			out(j+2) = v AND &hFF
		end if

	
		j = j + 3
	next i

	result = out
	result = mid(result,0,out_len)

end sub

function generateSasToken(byref resourceUri as string, byref signingKey as string, expiresInMins as word) as string
	dim key as string="key"
	dim message as string
	dim result as string=strgen(255,"A")
	dim ch as string(1)
	dim s as string
	dim daycounts,mincounts as word
	dim seconds as byte
	dim expires as dword
	dim i as byte
	
	rtc.getdata(daycounts,mincounts,seconds) 'rtc.getdata returns the elapse time since 2000, we need the elapse time since 1970

	expires=daycounts*24*60+mincounts+16302369+expiresInMins
	expires=expires*60+seconds
	
	message=resourceUri+"\x0A"+lstr(expires)
	base64_decode(signingKey,key)
	hmac256(key,message,result)
	

	for i=0 to len(result)/2-1
		ch=chr(val("&h"+mid(result,i*2+1,2)))
		s=s+ch
	next i
	base64_encode(s,len(s),result)
	
	generateSasToken=""
	for i=1 to len(result)
		ch=mid(result,i,1)
		if ch="/" then
			generateSasToken=generateSasToken+"%2F"
		else
			if ch="=" then
				generateSasToken=generateSasToken+"%3D"
			else
				if ch="+" then
					generateSasToken=generateSasToken+"%2B"
				else
					generateSasToken=generateSasToken+ch
				end if
			end if
		end if
	next i
	generateSasToken=generateSasToken+"&se="+lstr(expires)

end function
